{"version":3,"file":"static/js/387.8b0ac585.chunk.js","mappings":"0QAEaA,EAAOC,EAAAA,GAAAA,GAAH,kFAMJC,EAAOD,EAAAA,GAAAA,GAAH,uPAYJE,EAAQF,EAAAA,GAAAA,GAAH,oI,mBCgDlB,EA5Da,WACT,OAAkCG,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBH,GAASI,KAAKL,EACjC,GAAE,CAACC,IAIJ,OACI,8BACKF,IACG,SAACO,EAAA,EAAD,WACI,SAAC,IAAD,WACI,SAACZ,EAAD,UACKK,EAAUQ,KAAKC,KACZ,gBACIC,EADJ,EACIA,GACAC,EAFJ,EAEIA,aACAC,EAHJ,EAGIA,KACAC,EAJJ,EAIIA,cACAC,EALJ,EAKIA,UALJ,OAOI,UAACjB,EAAD,WACKc,GACG,gBACII,IACIC,kCAEAL,EAEJM,IAAKL,GAAQC,KAGjB,gBACIE,IAAKG,EACLD,IAAI,SACJE,MAAM,MACNC,OAAO,SAIf,SAACtB,EAAD,UAAQc,GAAQC,IACfC,IACG,0BACI,sCADJ,IACuBA,OAtBpBJ,EAPf,WAyC/B,C,sEChEYW,E,QAAgBzB,GAAAA,QAAH,gD,SCCbW,EAAU,SAAC,GAAkB,IAAhBe,EAAe,EAAfA,SACtB,OAAO,SAACD,EAAD,UAAgBC,GAC1B,C,4MCHKC,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,oGACVC,IAAM,GAAD,OAChBH,EADgB,uCACuBC,IAFlB,cACtBG,EADsB,yBAIrBA,EAAIC,KAAKC,SAJY,2CAAH,qDAOhBC,EAAe,mCAAG,WAAMpB,GAAN,uFACTgB,IAAM,GAAD,OAAIH,EAAJ,iBAAqBb,EAArB,oBAAmCc,IAD/B,cACrBG,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,sDAKfvB,EAAe,mCAAG,WAAMK,GAAN,uFACTgB,IAAM,GAAD,OAChBH,EADgB,iBACCb,EADD,4BACuBc,IAFnB,cACrBG,EADqB,yBAIpBA,EAAIC,MAJgB,2CAAH,sDAOfG,EAAe,mCAAG,WAAMrB,GAAN,uFACTgB,IAAM,GAAD,OAChBH,EADgB,iBACCb,EADD,4BACuBc,IAFnB,cACrBG,EADqB,yBAIpBA,EAAIC,KAAKC,SAJW,2CAAH,sDAOfG,EAAW,mCAAG,WAAMC,GAAN,uFACLP,IAAM,GAAD,OAChBH,EADgB,gCACgBC,EADhB,kBACiCS,IAFjC,cACjBN,EADiB,yBAIhBA,EAAIC,KAAKC,SAJO,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n    display: flex;\n    gap: 48px;\n    flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n    padding: 8px;\n    display: flex;\n    width: 185px;\n    flex-direction: column;\n    text-align: center;\n    border: 2px solid #bf5a36;\n    border-radius: 14px;\n    color: #000000;\n    background-color: #f2b885;\n`;\n\nexport const Title = styled.h3`\n    font-size: 20px;\n    line-height: 1.4;\n    font-weight: 700;\n    padding: 6px;\n    color: #0c2126;\n`;\n","import { getMovieCredits } from 'utils/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container } from 'components/GlobalStyle';\nimport { Section } from 'components/Section/Section';\nimport { Item, List, Title } from './Cast.styled';\nimport avatar from '../../images/kisspng-computer-icons-avatar-social-media-blog-font-aweso-avatar-icon-5b2e99c40ce333.6524068515297806760528.jpg';\n\nconst Cast = () => {\n    const [movieCast, setMovieCast] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        getMovieCredits(movieId).then(setMovieCast);\n    }, [movieId]);\n\n    const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\n    return (\n        <>\n            {movieCast && (\n                <Section>\n                    <Container>\n                        <List>\n                            {movieCast.cast.map(\n                                ({\n                                    id,\n                                    profile_path,\n                                    name,\n                                    original_name,\n                                    character,\n                                }) => (\n                                    <Item key={id}>\n                                        {profile_path ? (\n                                            <img\n                                                src={\n                                                    IMAGE_URL +\n                                                    'w200' +\n                                                    profile_path\n                                                }\n                                                alt={name || original_name}\n                                            />\n                                        ) : (\n                                            <img\n                                                src={avatar}\n                                                alt=\"avatar\"\n                                                width=\"185\"\n                                                height=\"278\"\n                                            />\n                                        )}\n\n                                        <Title>{name || original_name}</Title>\n                                        {character && (\n                                            <p>\n                                                <b>Character:</b> {character}\n                                            </p>\n                                        )}\n                                    </Item>\n                                )\n                            )}\n                        </List>\n                    </Container>\n                </Section>\n            )}\n        </>\n    );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n    padding: 30px 0px;\n`;\n","import PropTypes from 'prop-types';\nimport { StyledSection } from './Section.styled';\n\nexport const Section = ({ children }) => {\n    return <StyledSection>{children}</StyledSection>;\n};\n\nSection.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7c22496ae2c6d62400422cfda2333a3a';\n\nexport const getPopularMovies = async () => {\n    const res = await axios(\n        `${BASE_URL}trending/movie/week?api_key=${API_KEY}`\n    );\n    return res.data.results;\n};\n\nexport const getMovieDetails = async id => {\n    const res = await axios(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n    return res.data;\n};\n\nexport const getMovieCredits = async id => {\n    const res = await axios(\n        `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return res.data;\n};\n\nexport const getMovieReviews = async id => {\n    const res = await axios(\n        `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return res.data.results;\n};\n\nexport const searchMovie = async query => {\n    const res = await axios(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return res.data.results;\n};\n"],"names":["List","styled","Item","Title","useState","movieCast","setMovieCast","movieId","useParams","useEffect","getMovieCredits","then","Section","cast","map","id","profile_path","name","original_name","character","src","IMAGE_URL","alt","avatar","width","height","StyledSection","children","BASE_URL","API_KEY","getPopularMovies","axios","res","data","results","getMovieDetails","getMovieReviews","searchMovie","query"],"sourceRoot":""}